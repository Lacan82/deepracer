<?xml version="1.0"?>
<launch>
  <arg name="world_name" />
  <arg name="kinesis_video_stream_name" />
  <arg name="kinesis_video_stream_region" default="us-east-1" />
  <arg name="gui" default="true" />
  <arg name="car_color" default="Black" />
  <arg name="simapp_version"/>

  <!-- Check the simapp version and assign appropriate xacro file -->
  <arg name="racecar_xacro_file" default="mit" if="$(eval simapp_version == 1.0)"/>
  <arg name="racecar_xacro_file" default="confetti" if="$(eval simapp_version == 2.0)"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find deepracer_simulation)/worlds/$(arg world_name).world"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <arg name="include_second_camera" default="false" />
  <arg name="include_lidar_sensor" default="false" />

  <arg name="single_camera_racecar_body" default="true" />

  <!-- Lidar 360 degree - settings -->
  <arg name="lidar_360_degree_sample" default="64" />
  <arg name="lidar_360_degree_horizontal_resolution" default="1" />
  <arg name="lidar_360_degree_min_angle" default="-1.0472" />
  <arg name="lidar_360_degree_max_angle" default="1.0472" />
  <arg name="lidar_360_degree_min_range" default="0.15" />
  <arg name="lidar_360_degree_max_range" default="0.5" />
  <arg name="lidar_360_degree_range_resolution" default="0.01" />
  <arg name="lidar_360_degree_noise_mean" default="0.0" />
  <arg name="lidar_360_degree_noise_stddev" default="0.01" />

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find deepracer_simulation)/urdf/$(arg racecar_xacro_file)/racecar.xacro'
      include_second_camera:=$(arg include_second_camera)
      include_lidar_sensor:=$(arg include_lidar_sensor)

      lidar_360_degree_sample:=$(arg lidar_360_degree_sample)
      lidar_360_degree_horizontal_resolution:=$(arg lidar_360_degree_horizontal_resolution)
      lidar_360_degree_min_angle:=$(arg lidar_360_degree_min_angle)
      lidar_360_degree_max_angle:=$(arg lidar_360_degree_max_angle)
      lidar_360_degree_min_range:=$(arg lidar_360_degree_min_range)
      lidar_360_degree_max_range:=$(arg lidar_360_degree_max_range)
      lidar_360_degree_range_resolution:=$(arg lidar_360_degree_range_resolution)
      lidar_360_degree_noise_mean:=$(arg lidar_360_degree_noise_mean)
      lidar_360_degree_noise_stddev:=$(arg lidar_360_degree_noise_stddev)
      single_camera_racecar_body:=false 
      car_color:=$(arg car_color)" />

  <!-- urdf same as racecar description but only the body of the car same as old confetti model -->
  <param name="robot_description_bot" command="$(find xacro)/xacro --inorder '$(find deepracer_simulation)/urdf/$(arg racecar_xacro_file)/racecar.xacro'
      disable_gazebo_sensors:=true
      single_camera_racecar_body:=true"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="racecar_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model racecar -z 0.05" />

  <!-- ros_control racecar launch file -->
  <include file="$(find deepracer_simulation)/launch/racecar_control.launch" ns="/"/>

  <!-- Publish "better odom" topic that is normally generated by the particle filter -->
  <node name="better_odom" pkg="topic_tools" type="relay"
          args="/vesc/odom /pf/pose/odom" />

  <include file="$(find deepracer_simulation)/launch/h264_video_encoder.launch">
    <arg name="config_file" value="$(find deepracer_simulation)/config/deepracer_rpi_h264_encoder_config.yaml" />
    <arg name="image_transport" value="raw" />
  </include>

  <include file="$(find deepracer_simulation)/launch/kinesis_video_streamer.launch">
    <arg name="node_config_file" value="$(find deepracer_simulation)/config/deepracer_node_config.yaml" />
    <arg name="stream_config_file" value="$(find deepracer_simulation)/config/deepracer_stream_config.yaml" />
    <arg name="kinesis_video_stream_name" value="$(arg kinesis_video_stream_name)" />
    <arg name="kinesis_video_stream_region" value="$(arg kinesis_video_stream_region)" />
  </include>

</launch>
